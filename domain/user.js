// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define([], function() {
    var User;
    return User = (function() {
      function User(id) {
        this.assignPasswordToUser = __bind(this.assignPasswordToUser, this);
        this.createLocalSigninForUser = __bind(this.createLocalSigninForUser, this);
        this.attachGoogleToUser = __bind(this.attachGoogleToUser, this);
        this.attachFacebookToUser = __bind(this.attachFacebookToUser, this);
        this.attachTwitterToUser = __bind(this.attachTwitterToUser, this);
        this.assignUsernameToUser = __bind(this.assignUsernameToUser, this);
        this.assignDisplayNameToUser = __bind(this.assignDisplayNameToUser, this);
        this.assignEmailAddressToUser = __bind(this.assignEmailAddressToUser, this);
        this.startTrackingUser = __bind(this.startTrackingUser, this);
        this.id = id;
      }

      User.prototype.startTrackingUser = function(command, callback) {
        this["new"]('userTrackingStarted', {
          id: this.id,
          profile: command.profile
        });
        return callback(null);
      };

      User.prototype.assignEmailAddressToUser = function(command, callback) {
        this["new"]('userHasEmailAddress', {
          id: this.id,
          email: command.email
        });
        return callback(null);
      };

      User.prototype.assignDisplayNameToUser = function(command, callback) {
        this["new"]('userHasDisplayName', {
          id: this.id,
          displayName: command.displayName
        });
        return callback(null);
      };

      User.prototype.assignUsernameToUser = function(command, callback) {
        this["new"]('userHasUsername', {
          id: this.id,
          username: command.username
        });
        return callback(null);
      };

      User.prototype.attachTwitterToUser = function(command, callback) {
        this["new"]('userTwitterAttached', {
          id: this.id,
          profile: command.profile
        });
        return callback(null);
      };

      User.prototype.attachFacebookToUser = function(command, callback) {
        this["new"]('userFacebookAttached', {
          id: this.id,
          profile: command.profile
        });
        return callback(null);
      };

      User.prototype.attachGoogleToUser = function(command, callback) {
        this["new"]('userGoogleAttached', {
          id: this.id,
          profile: command.profile
        });
        return callback(null);
      };

      User.prototype.createLocalSigninForUser = function(command, callback) {
        this["new"]('userHasLocalSignin', {
          id: this.id,
          profile: command.profile
        });
        return callback(null);
      };

      User.prototype.assignPasswordToUser = function(command, callback) {
        this["new"]('userHasPassword', {
          id: this.id,
          password: command.password
        });
        return callback(null);
      };

      return User;

    })();
  });

}).call(this);
