// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };



  define(['knockout', 'articles/client'], function(ko, ArticleLogic) {
    var SelectLocation;
    return SelectLocation = (function() {
      function SelectLocation() {
        this.selectArea = __bind(this.selectArea, this);
        this.submit = __bind(this.submit, this);
        this.close = __bind(this.close, this);
        this.down = __bind(this.down, this);
        this.up = __bind(this.up, this);
        this.activate = __bind(this.activate, this);
        this.articlename = ko.observable('');
        this.areas = ko.observableArray([]);
        this.selectedIndex = ko.observable(0);
      }

      SelectLocation.prototype.activate = function(options) {
        var activationData,
          _this = this;
        this.wizard = options.wizard, this.dialog = options.dialog, activationData = options.activationData;
        this.articlename(activationData);
        return new ArticleLogic().getAreasForAutocomplete().then(function(areas) {
          var area, _i, _len, _results;
          _results = [];
          for (_i = 0, _len = areas.length; _i < _len; _i++) {
            area = areas[_i];
            _results.push(_this.areas.push(area));
          }
          return _results;
        });
      };

      SelectLocation.prototype.up = function() {
        var index;
        index = this.selectedIndex();
        index--;
        if (index < 0) {
          index = this.areas().length - 1;
        }
        return this.selectedIndex(index);
      };

      SelectLocation.prototype.down = function() {
        var index;
        index = this.selectedIndex();
        index++;
        index = index % this.areas().length;
        return this.selectedIndex(index);
      };

      SelectLocation.prototype.close = function() {
        return this.dialog.close();
      };

      SelectLocation.prototype.submit = function() {
        return this.selectArea(this.areas()[this.selectedIndex()]);
      };

      SelectLocation.prototype.selectArea = function(area) {
        var options;
        options = {
          model: 'views/article-create/reviewarticle',
          activationData: {
            name: this.articlename(),
            area: area
          }
        };
        return this.wizard.forward(options)();
      };

      return SelectLocation;

    })();
  });

}).call(this);
