// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var iced, requirejs, __iced_k, __iced_k_noop;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  requirejs = require('requirejs');

  requirejs.config({
    nodeRequire: require,
    paths: {
      plugins: './plugins',
      config: './config',
      odo: './odo',
      service: './nodecqrs/service'
    }
  });

  requirejs(['module', 'express', 'path', 'fs', 'peekinto', 'odo/plugins', 'odo/config', 'odo/eventstore/hub', 'http', 'socket.io', 'nodecqrs/routes'], function(module, express, path, fs, peek, plugins, config, hub, http, socket, routes) {
    var app, io, key, server, value, ___iced_passed_deferral, __iced_deferrals, __iced_k, _ref,
      _this = this;
    __iced_k = __iced_k_noop;
    ___iced_passed_deferral = iced.findDeferral(arguments);
    app = express();
    _ref = config.express;
    for (key in _ref) {
      value = _ref[key];
      app.set(key, value);
    }
    app.configure(function() {
      app.use(express.bodyParser());
      app.set('view engine', 'jade');
      console.log('Binding');
      console.log(path.join(path.dirname(module.uri), '/nodecqrs/views'));
      app.set('views', path.join(path.dirname(module.uri), '/nodecqrs/views'));
      app.use('/', express["static"](path.join(path.dirname(module.uri), '/nodecqrs/public')));
      return app.use(express.errorHandler({
        dumpExceptions: true,
        showStack: true
      }));
    });
    server = http.createServer(app);
    io = socket.listen(server);
    console.log('BOOTSTRAPPING:');
    console.log('1. -> routes');
    routes(app);
    console.log('2. -> message hub');
    io.sockets.on('connection', function(socket) {
      var conn;
      conn = "" + socket.handshake.address.address + ":" + socket.handshake.address.port;
      console.log("" + conn + " -- connects to socket.io");
      return socket.on('commands', function(data) {
        console.log("" + conn + " -- sends command " + data.command + ":");
        console.log(JSON.stringify(data, null, 4));
        return hub.emit(data.command, conn, data);
      });
    });
    hub.on('events', function(data) {
      console.log("eventDenormalizer -- denormalize event " + data.event);
      console.log("socket.io -- publish event " + data.event + " to browser");
      return io.sockets.emit('events', data);
    });
    server.listen(process.env.PORT || 3000);
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      parent: ___iced_passed_deferral,
      filename: "/Users/tcoats/Source/odo/nodecqrs.coffee"
    });
    plugins.init(app, __iced_deferrals.defer({
      lineno: 97
    }));
    __iced_deferrals._fulfill();
  });

}).call(this);
