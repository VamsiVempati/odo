// Generated by IcedCoffeeScript 1.4.0c
(function() {

  ko.bindingHandlers.modal = {
    init: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
      var $element, allBindings, shown;
      allBindings = allBindingsAccessor();
      $element = $(element);
      $element.addClass('hide modal');
      if (allBindings.modalOptions) {
        if (allBindings.modalOptions.beforeOpen) {
          $element.on('show', function() {
            return allBindings.modalOptions.beforeOpen();
          });
        }
      }
      if (allBindings.modalOptions) {
        if (allBindings.modalOptions.beforeClose) {
          $element.on('hide', function() {
            return allBindings.modalOptions.beforeClose();
          });
        }
      }
      shown = false;
      $element.on('shown', function() {
        if (!shown) {
          ko.applyBindingsToDescendants(bindingContext, element);
          return shown = true;
        } else {
          return $element.find('.slider').each(function(key, slider) {
            var data;
            data = $(slider).data('slider');
            if (data) return data.setup();
          });
        }
      });
      $element.on('hidden', function() {
        return valueAccessor()(false);
      });
      return {
        controlsDescendantBindings: true
      };
    },
    update: function(element, valueAccessor, allBindingsAccessor, viewModel, bindingContext) {
      var value;
      value = ko.utils.unwrapObservable(valueAccessor());
      if (value) {
        return $(element).modal('show');
      } else {
        return $(element).modal('hide');
      }
    }
  };

}).call(this);
