// Generated by IcedCoffeeScript 1.4.0c
(function() {
  var app, config, configfile, configpath, err, express, fetching, fs, iced, inject, key, path, peek, postal, value, __iced_deferrals, __iced_k, __iced_k_noop,
    _this = this;

  iced = require('iced-coffee-script').iced;
  __iced_k = __iced_k_noop = function() {};

  path = require('path');

  fs = require('fs');

  express = require('express');

  inject = require('injectinto');

  peek = require('peekinto');

  postal = require('postal');

  fetching = require('fetching');

  app = express();

  configpath = path.join(__dirname, 'config.json');

  (function(__iced_k) {
    __iced_deferrals = new iced.Deferrals(__iced_k, {
      filename: "/Users/tcoats/Source/odo/bootstrap.coffee"
    });
    fs.readFile(configpath, __iced_deferrals.defer({
      assign_fn: (function() {
        return function() {
          err = arguments[0];
          return configfile = arguments[1];
        };
      })(),
      lineno: 12
    }));
    __iced_deferrals._fulfill();
  })(function() {
    config = JSON.parse(configfile, 'utf-8');
    app.plugins = require('./plugins');
    (function(__iced_k) {
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "/Users/tcoats/Source/odo/bootstrap.coffee"
      });
      app.plugins.loadplugins(config.plugins.directories, __iced_deferrals.defer({
        lineno: 16
      }));
      __iced_deferrals._fulfill();
    })(function() {
      var _ref;
      _ref = config.config;
      for (key in _ref) {
        value = _ref[key];
        app.set(key, value);
      }
      app.configure(function() {
        var route, ___iced_passed_deferral, __iced_deferrals, __iced_k, _i, _len, _ref1;
        __iced_k = __iced_k_noop;
        ___iced_passed_deferral = iced.findDeferral(arguments);
        app.use(express.compress());
        app.use(express.bodyParser());
        app.use(express.methodOverride());
        app.use(express.cookieParser(app.get('cookie secret')));
        app.use(express.cookieSession({
          key: app.get('session key'),
          secret: app.get('session secret')
        }));
        _ref1 = config.routes;
        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
          route = _ref1[_i];
          app.use(route.source, express["static"](__dirname + route.target));
        }
        app.inject = new inject;
        app.use(function(req, res, next) {
          app.inject.clear('req');
          app.inject.bind('req', req);
          app.inject.clear('res');
          app.inject.bind('res', res);
          return next();
        });
        app.postal = postal();
        peek(app);
        app.fetch = new fetching;
        (function(__iced_k) {
          __iced_deferrals = new iced.Deferrals(__iced_k, {
            parent: ___iced_passed_deferral,
            filename: "/Users/tcoats/Source/odo/bootstrap.coffee"
          });
          app.plugins.configure(app, __iced_deferrals.defer({
            lineno: 56
          }));
          __iced_deferrals._fulfill();
        })(function() {
          app.use(app.router);
          return app.use(express.errorHandler({
            dumpExceptions: true,
            showStack: true
          }));
        });
      });
      app.listen(process.env.PORT || 80);
      app.fetch.middleware(app);
      __iced_deferrals = new iced.Deferrals(__iced_k, {
        filename: "/Users/tcoats/Source/odo/bootstrap.coffee"
      });
      app.plugins.init(app, __iced_deferrals.defer({
        lineno: 71
      }));
      __iced_deferrals._fulfill();
    });
  });

}).call(this);
