// Generated by IcedCoffeeScript 1.4.0c
(function() {
  var bytesToSize, moment, os, _;

  _ = require('underscore');

  os = require('os');

  moment = require('moment');

  bytesToSize = function(bytes, precision) {
    var gigabyte, kilobyte, megabyte, terabyte;
    if (precision == null) precision = 0;
    kilobyte = 1024;
    megabyte = kilobyte * 1024;
    gigabyte = megabyte * 1024;
    terabyte = gigabyte * 1024;
    if (bytes >= 0 && bytes < kilobyte) return bytes + ' B';
    if (bytes >= kilobyte && bytes < megabyte) {
      return (bytes / kilobyte).toFixed(precision) + ' KB';
    }
    if (bytes >= megabyte && bytes < gigabyte) {
      return (bytes / megabyte).toFixed(precision) + ' MB';
    }
    if (bytes >= gigabyte && bytes < terabyte) {
      return (bytes / gigabyte).toFixed(precision) + ' GB';
    }
    if (bytes >= terabyte) return (bytes / terabyte).toFixed(precision) + ' TB';
    return bytes + ' B';
  };

  module.exports = {
    init: function(app) {
      return app.get('/%CF%88/server/', function(req, res) {
        var settings;
        settings = {
          'Environment': app.get('env'),
          'Request host': req.headers.host,
          'Server name': os.hostname(),
          'Operating system': "" + (os.type()) + " " + (os.arch()) + " (" + (os.release()) + ")",
          'Last restarted': moment().subtract('seconds', os.uptime()).fromNow(),
          'Memory': "" + (bytesToSize(os.freemem())) + " free / " + (bytesToSize(os.totalmem())) + " available",
          'CPUs': os.cpus().length
        };
        settings = _(settings).pairs().map(function(pair) {
          return {
            key: pair[0],
            value: pair[1]
          };
        });
        return res.render({
          view: 'admin/layout',
          data: {
            title: 'Î¨ -> Server information',
            bodyclasses: ['prompt'],
            settings: settings
          },
          partials: {
            content: 'server/server'
          }
        });
      });
    }
  };

}).call(this);
