// Generated by CoffeeScript 1.6.3
(function() {
  define(['knockout', 'plugins/router', 'durandal/app'], function(ko, router, app) {
    var isRouterEnabled, previousInstruction, subscription;
    subscription = null;
    router.updateDocumentTitle = function(instance, instruction) {
      var update;
      if (subscription != null) {
        subscription.dispose();
        subscription = null;
      }
      update = function() {
        var parts;
        parts = [];
        if (instance.title != null) {
          parts.push(ko.unwrap(instance.title));
        }
        if (instruction.config.title != null) {
          parts.push(instruction.config.title);
        }
        if (app.title != null) {
          parts.push(app.title);
        }
        parts = parts.filter(function(part) {
          return part !== '';
        });
        return document.title = parts.join(' - ');
      };
      update();
      if ((instance.title != null) && ko.isObservable(instance.title)) {
        return subscription = instance.title.subscribe(function() {
          return update();
        });
      }
    };
    isRouterEnabled = true;
    router.disable = function() {
      return isRouterEnabled = false;
    };
    router.enable = function() {
      return isRouterEnabled = true;
    };
    previousInstruction = null;
    return router.guardRoute = function(instance, instruction) {
      if ((previousInstruction != null) && !isRouterEnabled) {
        return previousInstruction.fragment;
      }
      previousInstruction = instruction;
      return true;
    };
  });

}).call(this);
