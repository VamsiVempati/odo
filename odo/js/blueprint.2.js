// Generated by IcedCoffeeScript 1.3.3f
(function() {
  var App, Measurement, User;

  Measurement = (function() {

    function Measurement(skill, output, group, delivery) {
      if (skill == null) skill = 0.05;
      if (output == null) output = 0.05;
      if (group == null) group = 0.05;
      if (delivery == null) delivery = 0.05;
      this.Skill = ko.observable(skill);
      this.Output = ko.observable(output);
      this.Group = ko.observable(group);
      this.Delivery = ko.observable(delivery);
    }

    Measurement.prototype.total = function() {
      return this.Skill() + this.Output() + this.Group() + this.Delivery();
    };

    return Measurement;

  })();

  User = (function() {

    function User(Measurement, name) {
      if (name == null) name = 'default';
      this.Measurement = ko.observable(Measurement);
      this.Name = ko.observable(name);
    }

    return User;

  })();

  inject.bind('User').to('User').many();

  App = (function() {

    function App() {
      this.Users = ko.observableArray();
    }

    return App;

  })();

  $(function() {
    var app;
    app = new App;
    app.Users.push(new User(new Measurement, 'Mary'));
    app.Users.push(new User(new Measurement, 'Sally'));
    return ko.applyBindings(app);
  });

}).call(this);
