// Generated by IcedCoffeeScript 1.6.3-g
(function() {


  define(['module', 'path', 'express', 'passport', 'passport-twitter', 'odo/config', 'redis'], function(module, path, express, passport, passporttwitter, config, redis) {
    return {
      configure: function(app) {
        app.use('/odo/auth', express["static"](path.dirname(module.uri) + '/public'));
        app.use(passport.initialize());
        app.use(passport.session());
        passport.use(new passporttwitter.Strategy({
          consumerKey: config.passport.twitter['consumer key'],
          consumerSecret: config.passport.twitter['consumer secret'],
          callbackURL: 'http://thomascoats.com/auth/twitter/callback'
        }, function(token, tokenSecret, profile, done) {
          var client, user;
          user = {
            id: profile.id,
            provider: profile.provider,
            displayName: profile.displayName
          };
          client = redis.createClient();
          return client.set('user:' + profile.id, JSON.stringify(user), function(err) {
            if (err != null) {
              done(err);
            }
            client.quit();
            return done(null, user);
          });
        }));
        passport.serializeUser(function(user, done) {
          return done(null, user.id);
        });
        return passport.deserializeUser(function(id, done) {
          var client;
          client = redis.createClient();
          return client.get('user:' + id, function(err, user) {
            if (err != null) {
              done(err);
            }
            client.quit();
            return done(null, JSON.parse(user));
          });
        });
      },
      init: function(app) {
        app.get('/auth/twitter', passport.authenticate('twitter'));
        app.get('/auth/twitter/callback', passport.authenticate('twitter', {
          successRedirect: '/',
          failureRedirect: '/'
        }));
        app.get('/auth/signout', function(req, res) {
          req.logout();
          return res.redirect('/');
        });
        return app.get('/auth/user', function(req, res) {
          if (req.user == null) {
            res.send(403, 'authentication required');
            return;
          }
          return res.send(req.user);
        });
      }
    };
  });

}).call(this);
