// Generated by IcedCoffeeScript 1.6.3-g
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };



  define(['durandal/system', 'jquery'], function(system, $) {
    var Animate;
    return Animate = (function() {
      function Animate() {
        this.inTransition = __bind(this.inTransition, this);
        this.outTransition = __bind(this.outTransition, this);
        this.endTransition = __bind(this.endTransition, this);
        this.startTransition = __bind(this.startTransition, this);
        this.create = __bind(this.create, this);
      }

      Animate.prototype.create = function(settings) {
        var _this = this;
        this.settings = settings;
        return $.Deferred(function(deferred) {
          _this.deferred = deferred;
          if (_this.settings.child) {
            return _this.startTransition();
          } else {
            return _this.endTransition();
          }
        });
      };

      Animate.prototype.startTransition = function() {
        if (this.settings.activeView != null) {
          return this.outTransition(this.inTransition);
        } else {
          return this.inTransition();
        }
      };

      Animate.prototype.endTransition = function() {
        return this.deferred.resolve();
      };

      Animate.prototype.outTransition = function(callback) {
        var $previousView,
          _this = this;
        $previousView = $(this.settings.activeView);
        $previousView.addClass('animated');
        $previousView.addClass(this.settings.outAnimation);
        return setTimeout(function() {
          if (callback != null) {
            callback();
            return _this.endTransition();
          }
        }, 200);
      };

      Animate.prototype.inTransition = function() {
        var $newView,
          _this = this;
        this.settings.triggerAttach();
        $newView = $(this.settings.child).removeClass([this.settings.outAnimation, this.settings.inAnimation]).addClass('animated');
        $newView.css('display', '');
        $newView.addClass(this.settings.inAnimation);
        return setTimeout(function() {
          $newView.removeClass(_this.settings.inAnimation + ' ' + _this.settings.outAnimation + ' animated');
          return _this.endTransition();
        }, 300);
      };

      return Animate;

    })();
  });

}).call(this);
