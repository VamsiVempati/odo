// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['q', 'jquery', 'odo/auth/twitter', 'uuid'], function(Q, $, twitterauth, uuid) {
    var ArticleLogic, areas;
    areas = ['Patterns & Practices', 'Leader of Men'];
    return ArticleLogic = (function() {
      function ArticleLogic() {
        this.deleteArticle = __bind(this.deleteArticle, this);
        this.createArticle = __bind(this.createArticle, this);
        this.getUrlForArticle = __bind(this.getUrlForArticle, this);
        this.getAreasForAutocomplete = __bind(this.getAreasForAutocomplete, this);
        this.getArticleForDisplay = __bind(this.getArticleForDisplay, this);
        this.getArticlesForAutocomplete = __bind(this.getArticlesForAutocomplete, this);
      }

      ArticleLogic.prototype.getArticlesForAutocomplete = function() {
        return twitterauth.getUser().then(function(user) {
          var _this = this;
          return Q($.get("user/" + user.id + "/articles")).then(function(articles) {
            articles = articles.sort(function(a, b) {
              a = a.name.toLowerCase();
              b = b.name.toLowerCase();
              if (a < b) {
                return -1;
              }
              if (a > b) {
                return 1;
              }
              return 0;
            });
            return articles;
          });
        });
      };

      ArticleLogic.prototype.getArticleForDisplay = function(id) {
        var _this = this;
        return Q($.get("article/" + id)).then(function(article) {
          article.url = _this.getUrlForArticle(article);
          return article;
        });
      };

      ArticleLogic.prototype.getAreasForAutocomplete = function() {
        var dfd;
        dfd = Q.defer();
        dfd.resolve(areas);
        return dfd.promise;
      };

      ArticleLogic.prototype.getUrlForArticle = function(article) {
        return "articles/" + article.id + "/" + article.name;
      };

      ArticleLogic.prototype.createArticle = function(article) {
        article.id = uuid.v1();
        return Q($.post("article/" + article.id, article));
      };

      ArticleLogic.prototype.deleteArticle = function(id) {
        return Q($.ajax({
          url: "article/" + id,
          type: 'DELETE'
        }));
      };

      return ArticleLogic;

    })();
  });

}).call(this);
