// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  define(['redis', 'odo/infra/config', 'odo/infra/hub'], function(redis, config, hub) {
    var UserProfile, db;
    db = redis.createClient();
    return UserProfile = (function() {
      function UserProfile() {
        this.addOrRemoveValues = __bind(this.addOrRemoveValues, this);
        this.projection = __bind(this.projection, this);
      }

      UserProfile.prototype.projection = function() {
        var _this = this;
        hub.receive('userTrackingStarted', function(event, cb) {
          var user;
          user = {
            id: event.payload.id,
            displayName: event.payload.profile.displayName
          };
          return db.hset("" + config.odo.domain + ":users", event.payload.id, JSON.stringify(user), cb);
        });
        hub.receive('userHasEmailAddress', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.email = event.payload.email;
            return user;
          }, cb);
        });
        hub.receive('userHasDisplayName', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.displayName = event.payload.displayName;
            return user;
          }, cb);
        });
        hub.receive('userHasUsername', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            console.log("giving user a username " + event.payload.username);
            user.username = event.payload.username;
            return user;
          }, cb);
        });
        hub.receive('userTwitterConnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.twitter = {
              id: event.payload.profile.id,
              profile: event.payload.profile
            };
            return user;
          }, cb);
        });
        hub.receive('userTwitterDisconnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.twitter = null;
            return user;
          }, cb);
        });
        hub.receive('userFacebookConnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.facebook = {
              id: event.payload.profile.id,
              profile: event.payload.profile
            };
            return user;
          }, cb);
        });
        hub.receive('userFacebookDisconnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.facebook = null;
            return user;
          }, cb);
        });
        hub.receive('userGoogleConnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.google = {
              id: event.payload.profile.id,
              profile: event.payload.profile
            };
            return user;
          }, cb);
        });
        hub.receive('userGoogleDisconnected', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.google = null;
            return user;
          }, cb);
        });
        hub.receive('userHasLocalSignin', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.local = {
              id: event.payload.id,
              profile: event.payload.profile
            };
            return user;
          }, cb);
        });
        hub.receive('userHasPassword', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.local.profile.password = event.payload.password;
            return user;
          }, cb);
        });
        return hub.receive('userLocalSigninRemoved', function(event, cb) {
          return _this.addOrRemoveValues(event, function(user) {
            user.local = null;
            return user;
          }, cb);
        });
      };

      UserProfile.prototype.addOrRemoveValues = function(event, callback, cb) {
        var _this = this;
        return db.hget("" + config.odo.domain + ":users", event.payload.id, function(err, user) {
          if (err != null) {
            cb();
            return;
          }
          user = JSON.parse(user);
          user = callback(user);
          user = JSON.stringify(user, null, 4);
          return db.hset("" + config.odo.domain + ":users", event.payload.id, user, function() {
            return cb();
          });
        });
      };

      UserProfile.prototype.get = function(id, callback) {
        var _this = this;
        return db.hget("" + config.odo.domain + ":users", id, function(err, data) {
          if (err != null) {
            callback(err);
            return;
          }
          data = JSON.parse(data);
          if (data != null) {
            callback(null, data);
            return;
          }
          return setTimeout(function() {
            return db.hget("" + config.odo.domain + ":users", id, function(err, data) {
              if (err != null) {
                callback(err);
                return;
              }
              data = JSON.parse(data);
              return callback(null, data);
            });
          }, 1000);
        });
      };

      return UserProfile;

    })();
  });

}).call(this);
