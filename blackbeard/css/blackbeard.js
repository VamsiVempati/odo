// Generated by IcedCoffeeScript 1.3.3f
(function() {
  var App, Evaluation, EvaluationCollection, ViewApp,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  App = (function(_super) {

    __extends(App, _super);

    function App() {
      return App.__super__.constructor.apply(this, arguments);
    }

    return App;

  })(Backbone.Model);

  EvaluationCollection = (function(_super) {

    __extends(EvaluationCollection, _super);

    function EvaluationCollection() {
      return EvaluationCollection.__super__.constructor.apply(this, arguments);
    }

    EvaluationCollection.prototype.model = Evaluation;

    return EvaluationCollection;

  })(Backbone.Collection);

  Evaluation = (function(_super) {

    __extends(Evaluation, _super);

    function Evaluation() {
      return Evaluation.__super__.constructor.apply(this, arguments);
    }

    Evaluation.prototype.initialize = function() {
      return this.set({
        Skill: 0.05,
        Output: 0.05,
        Group: 0.05,
        Deliver: 0.05
      });
    };

    return Evaluation;

  })(Backbone.Model);

  ViewApp = (function(_super) {

    __extends(ViewApp, _super);

    function ViewApp() {
      this.SaveEvaluation = __bind(this.SaveEvaluation, this);

      this.EditEvaluation = __bind(this.EditEvaluation, this);
      return ViewApp.__super__.constructor.apply(this, arguments);
    }

    ViewApp.prototype.EditEvaluation = function(evaluation) {
      return this.EditingEvaluation(evaluation);
    };

    ViewApp.prototype.SaveEvaluation = function() {
      return this.EditingEvaluation(void 0);
    };

    ViewApp.prototype.EditingEvaluation = ko.observable(null);

    return ViewApp;

  })(kb.ViewModel);

  $(function() {
    window.model = new App({
      Evaluations: new EvaluationCollection([
        new Evaluation({
          Name: 'Thomas Coats'
        }), new Evaluation({
          Name: 'Mathew'
        })
      ])
    });
    ko.applyBindings(new ViewApp(window.model));
    return $('.wizard').wizard();
  });

}).call(this);
